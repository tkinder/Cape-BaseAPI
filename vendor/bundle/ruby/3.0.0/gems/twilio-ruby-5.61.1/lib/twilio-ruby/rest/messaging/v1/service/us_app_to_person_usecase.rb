##
# This code was generated by
# \ / _    _  _|   _  _
#  | (_)\/(_)(_|\/| |(/_  v1.0.0
#       /       /
#
# frozen_string_literal: true

module Twilio
  module REST
    class Messaging < Domain
      class V1 < Version
        class ServiceContext < InstanceContext
          ##
          # PLEASE NOTE that this class contains beta products that are subject to change. Use them with caution.
          class UsAppToPersonUsecaseList < ListResource
            ##
            # Initialize the UsAppToPersonUsecaseList
            # @param [Version] version Version that contains the resource
            # @param [String] messaging_service_sid The unique string that we created to
            #   identify the Service resource.
            # @return [UsAppToPersonUsecaseList] UsAppToPersonUsecaseList
            def initialize(version, messaging_service_sid: nil)
              super(version)

              # Path Solution
              @solution = {messaging_service_sid: messaging_service_sid}
              @uri = "/Services/#{@solution[:messaging_service_sid]}/Compliance/Usa2p/Usecases"
            end

            ##
            # Fetch the UsAppToPersonUsecaseInstance
            # @param [String] brand_registration_sid The unique string to identify the A2P
            #   brand.
            # @return [UsAppToPersonUsecaseInstance] Fetched UsAppToPersonUsecaseInstance
            def fetch(brand_registration_sid: :unset)
              params = Twilio::Values.of({'BrandRegistrationSid' => brand_registration_sid, })

              payload = @version.fetch('GET', @uri, params: params)

              UsAppToPersonUsecaseInstance.new(
                  @version,
                  payload,
                  messaging_service_sid: @solution[:messaging_service_sid],
              )
            end

            ##
            # Provide a user friendly representation
            def to_s
              '#<Twilio.Messaging.V1.UsAppToPersonUsecaseList>'
            end
          end

          ##
          # PLEASE NOTE that this class contains beta products that are subject to change. Use them with caution.
          class UsAppToPersonUsecasePage < Page
            ##
            # Initialize the UsAppToPersonUsecasePage
            # @param [Version] version Version that contains the resource
            # @param [Response] response Response from the API
            # @param [Hash] solution Path solution for the resource
            # @return [UsAppToPersonUsecasePage] UsAppToPersonUsecasePage
            def initialize(version, response, solution)
              super(version, response)

              # Path Solution
              @solution = solution
            end

            ##
            # Build an instance of UsAppToPersonUsecaseInstance
            # @param [Hash] payload Payload response from the API
            # @return [UsAppToPersonUsecaseInstance] UsAppToPersonUsecaseInstance
            def get_instance(payload)
              UsAppToPersonUsecaseInstance.new(
                  @version,
                  payload,
                  messaging_service_sid: @solution[:messaging_service_sid],
              )
            end

            ##
            # Provide a user friendly representation
            def to_s
              '<Twilio.Messaging.V1.UsAppToPersonUsecasePage>'
            end
          end

          ##
          # PLEASE NOTE that this class contains beta products that are subject to change. Use them with caution.
          class UsAppToPersonUsecaseInstance < InstanceResource
            ##
            # Initialize the UsAppToPersonUsecaseInstance
            # @param [Version] version Version that contains the resource
            # @param [Hash] payload payload that contains response from Twilio
            # @param [String] messaging_service_sid The unique string that we created to
            #   identify the Service resource.
            # @return [UsAppToPersonUsecaseInstance] UsAppToPersonUsecaseInstance
            def initialize(version, payload, messaging_service_sid: nil)
              super(version)

              # Marshaled Properties
              @properties = {'us_app_to_person_usecases' => payload['us_app_to_person_usecases'], }
            end

            ##
            # @return [Array[Hash]] Human readable A2P Use Case details
            def us_app_to_person_usecases
              @properties['us_app_to_person_usecases']
            end

            ##
            # Provide a user friendly representation
            def to_s
              "<Twilio.Messaging.V1.UsAppToPersonUsecaseInstance>"
            end

            ##
            # Provide a detailed, user friendly representation
            def inspect
              "<Twilio.Messaging.V1.UsAppToPersonUsecaseInstance>"
            end
          end
        end
      end
    end
  end
end